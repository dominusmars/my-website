import React, { useEffect, useState } from 'react'
import Head from "next/head"
import stylesDesktop from "../styles/WriteUps.module.scss"
import stylesMobile from "../styles/mobile/WriteUps.module.scss"
import Navbar from './components/Navbar'
import NavBarMobile from './components/mobile/NavBarMobile'
import Footer from './components/Footer'
import Textfile from './components/Textfile'
import axios from "axios"
import LoadingDots from "./components/LoadingDots"
function Write_ups() {
    const [writeUps, setwriteUps] = useState([]);
    useEffect(() => {
        axios.get('/api/writeups').then(res => {
            setwriteUps(res.data)
        })
        setwriteUps(false)
    }, []);
    const [mobile, setMobile] = useState(1);
    const updateDim = () => {
        const mobile = window.innerWidth < 1300
        setMobile(mobile)
    }
    useEffect(() => {
        updateDim()
        window.addEventListener("resize", updateDim);
        return () =>
            window.removeEventListener("resize", updateDim);
    }, [])
    var styles = mobile ? stylesMobile : stylesDesktop;
    return (
        <div className={styles.container}>
            <Head>
                <title>Write Ups - Khawam</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="true" />
                <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,300;0,400;0,500;1,200&display=swap" rel="stylesheet" />

            </Head>
            {mobile ? <NavBarMobile active={"Writeups"} /> : <Navbar active={"Writeups"} />}
            <div className={styles.main_container}>
                <div className={styles.title}>Write Ups</div>
                <div className={styles.writeups}>
                    {!writeUps && <div className={styles.loading}>
                        <LoadingDots />
                    </div>}
                    {writeUps && writeUps.map((obj, k) => {
                        return (
                            <Textfile mobile={mobile} key={k} name={obj.name} data={obj.data} />
                        )
                    })}
                </div>

            </div>
            <Footer />
        </div>
    )
}

export default Write_ups